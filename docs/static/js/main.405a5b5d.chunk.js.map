{"version":3,"sources":["logo.svg","components/Seat.js","components/Hall.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Seat","handleClick","e","props","seatId","classString","this","status","onClick","className","id","label","React","Component","Hall","state","rows","cols","hall","Array","noOfSeats","confirmDisabled","totalPrice","i","rowId","String","fromCharCode","seatClass","indexOf","seatPrice","j","class","price","handleChange","bind","handleConfirmBooking","rowNo","getRowNoFromSeatId","colNo","getColNoFromSeatId","deselectSelectedSeats","setState","target","name","parseInt","value","split","seats","seat","push","key","type","min","max","defaultValue","onChange","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.405a5b5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n\nexport default class Seat extends React.Component {\n\n    handleClick = (e)=>{\n        this.props.handleClick(this.props.seatId)\n    }\n\n    render() {\n        let classString = 'seat '+this.props.seatId +' '+ (this.props.status )\n        return <span onClick={this.handleClick} className={classString}  id={this.props.seatId}>\n            {this.props.label}\n        </span>\n    }\n}","import React from \"react\";\nimport Seat from \"./Seat\"\n\nexport default class Hall extends React.Component {\n    constructor(props) {\n        super(props);\n        let rows =10, cols=15;\n\n        this.state = {\n            rows: rows,\n            cols: cols,\n            hall: new Array(rows),\n            noOfSeats: 0,\n            confirmDisabled: true,\n            totalPrice: 0\n        };\n        for(let i=0; i<rows; i++) {\n            this.state.hall[i] = new Array(cols);\n            let rowId = String.fromCharCode(65+i);\n            let seatClass =  [\"A\",\"B\"].indexOf(rowId) > -1 ? \"CLUB\" : \"EXECUTIVE\";\n            let seatPrice =  [\"A\",\"B\"].indexOf(rowId) > -1 ? 250 : 236;\n            for(let j=0; j<cols; j++) {\n                this.state.hall[i][j] = {status: 'available', class: 'executive', price: '236'};\n                this.state.hall[i][j].rowId = rowId;\n                this.state.hall[i][j].seatId = rowId + ' ' + (j+1);\n                this.state.hall[i][j].class = seatClass;\n                this.state.hall[i][j].price = seatPrice;\n                this.state.hall[i][j].status = (([\"C\", \"D\", \"E\", \"F\"].indexOf(rowId) > -1 && j < 7) || (rowId != 'A' && j<2)) ? 'void': 'available'\n\n            }\n        }\n        this.handleChange=this.handleChange.bind(this);\n        this.handleConfirmBooking = this.handleConfirmBooking.bind(this);\n     }\n\n    handleClick(seatId) {\n        let rowNo = this.getRowNoFromSeatId(seatId);\n        let colNo = this.getColNoFromSeatId(seatId);\n        let i =0;\n        this.deselectSelectedSeats();\n        for (i = 0; i < this.state.noOfSeats && colNo + i < this.state.cols; i++) {\n            if (this.state.hall[rowNo][colNo + i].status === 'available') {\n                continue;\n            } else {\n                break;\n            }\n        }\n        if (i === this.state.noOfSeats ) {\n            for (let i = 0; i < this.state.noOfSeats; i++) {\n                this.state.hall[rowNo][colNo+i].status = 'selected';\n            }\n            this.setState({confirmDisabled: false});\n        }\n    }\n\n    deselectSelectedSeats() {\n        for (let i = 0; i < this.state.rows; i++) {\n            for (let j = 0; j < this.state.cols; j++) {\n                if(this.state.hall[i][j].status === 'selected'){\n                    this.state.hall[i][j].status = 'available';\n                }\n            }\n        }\n    }\n\n    handleChange(e) {\n        this.deselectSelectedSeats();\n        this.setState({[e.target.name]: parseInt(e.target.value), totalPrice:0});\n    }\n\n    handleConfirmBooking() {\n        let totalPrice =0;\n        for (let i = 0; i < this.state.rows; i++) {\n            for (let j = 0; j < this.state.cols; j++) {\n                if(this.state.hall[i][j].status === 'selected'){\n                    this.state.hall[i][j].status = 'booked';\n                    totalPrice += this.state.hall[i][j].price;\n                }\n            }\n        }\n        this.setState({confirmDisabled: true, totalPrice});\n    }\n\n    getRowNoFromSeatId(seatId) {\n        let rowStrToNo = {'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4, 'F': 5, 'G': 6, 'H': 7, 'I': 8, 'J': 9};\n        let rowStr = seatId.split(' ')[0];\n        return rowStrToNo[rowStr];\n    }\n\n    getColNoFromSeatId(seatId) {\n        return seatId.split(' ')[1] - 1;\n    }\n\n    render() {\n        const rows = [];\n        for(let i = 0; i< this.state.rows; i++) {\n            const seats = [];\n\n            for(let j=0; j<this.state.cols; j++) {\n                let seat = this.state.hall[i][j];\n                seats.push(<Seat\n                    key={seat.seatId}\n                    label={seat.seatId.split(' ')[1]}\n                    seatId={seat.seatId}\n                    seatClass={seat.class}\n                    seatPrice={seat.price}\n                    status={seat.status}\n                    handleClick={this.handleClick.bind(this)}\n                />)\n            }\n            if (i == 0) {\n                rows.push(<div>\n                    CLUB - {this.state.hall[i][0].price}\n                <hr/></div>)\n            }\n            if (i === 2 ) {\n                rows.push(<div>\n                    EXECUTIVE - {this.state.hall[i][0].price}\n                    <hr/></div>)\n\n            }\n\n            rows.push(<div className={'row'}>\n                <span className={'rowName'}>{this.state.hall[i][0].rowId}</span>\n                {seats}\n            </div>);\n\n        }\n\n\n        return(<div className={'hall'}>\n            {rows}\n            <label>No of Seats </label>\n            <input type=\"number\" name='noOfSeats' min={0} max={10}\n                   defaultValue={this.state.noOfSeats}\n                   className=\"no-of-seats\"\n                   onChange={this.handleChange}\n            />\n            <button className=\"confirm\"\n                    disabled={this.state.confirmDisabled}\n                    onClick={this.handleConfirmBooking}\n                    >Confirm</button>\n\n            <div className=\"price\">\n                Total Price: <label>{this.state.totalPrice}</label>\n            </div>\n        </div>)\n    }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Hall from './components/Hall'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Hall/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}